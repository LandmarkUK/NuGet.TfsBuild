<?xml version="1.0" encoding="utf-8" ?>
<!--NuGet.TfsBuildService.props v1.0.0 - See https://github.com/LandmarkUK/NuGet.TfsBuild for more information -->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <NuGetToolsPath Condition="$(NuGetToolsPath) == '' Or $(NuGetToolsPath) == '*Undefined*'">$([System.IO.Path]::Combine($(SolutionDir), ".nuget"))</NuGetToolsPath>
    <NuGetExePath Condition="$(NuGetExePath) == '' Or $(NuGetExePath) == '*Undefined*'">$(NuGetToolsPath)\nuget.exe</NuGetExePath>
  </PropertyGroup>
  
  <Target Name="ConfigurePrivateNuGetRepository" BeforeTargets="_CheckForInvalidConfigurationAndPlatform" Condition="($(RestorePackages) == 'true') and ($(PrivateNuGetRepository) != '') and ($(PrivateNuGetRepositoryUsername) != '') and ($(PrivateNuGetRepositoryPassword) != '')">
    <Message Importance="High" Text="Installing private NuGet repository $(PrivateNuGetRepository)..." />
    <Exec ContinueOnError="true" Command="attrib -r &quot;$(NuGetToolsPath)\NuGet.config" />
    <Exec Command="&quot;$(NuGetExePath)&quot; sources remove -name &quot;PrivatePackageRepo&quot; -configfile &quot;$(NuGetToolsPath)\NuGet.config" ContinueOnError="true" />
    <Exec Command="&quot;$(NuGetExePath)&quot; sources add -name &quot;PrivatePackageRepo&quot; -source &quot;$(PrivateNuGetRepository)&quot; -UserName &quot;$(PrivateNuGetRepositoryUsername)&quot; -password &quot;$(PrivateNuGetRepositoryPassword)&quot; -configfile &quot;$(NuGetToolsPath)\NuGet.config" />
  </Target>
</Project>
  